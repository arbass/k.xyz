{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/button-text-toggl.ts", "../src/utils/collapse-buttons.ts", "../src/utils/height-transition.ts", "../src/utils/hero-form.ts", "../src/utils/mind-connections-leader.ts", "../src/utils/stats-hero.ts", "../src/utils/sync-click.ts", "../src/utils/toggl-class-trigger-target.ts", "../src/utils/year-counter.ts", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// https://chatgpt.com/c/670d0603-7358-8002-8d85-c28096dce66c\nexport const func_buttonTextToggl = () => {\n  const all_newAlements = document.querySelectorAll('[button-text-toggl]');\n  if (all_newAlements.length) {\n    all_newAlements.forEach((button) => {\n      const textElement = button.querySelector('[button-text-toggl-values]');\n      if (textElement) {\n        // \u0420\u0430\u0437\u0434\u0435\u043B\u044F\u0435\u043C \u0442\u0435\u043A\u0441\u0442 \u043D\u0430 \u0434\u0432\u0430 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044F\n        const values = textElement.getAttribute('button-text-toggl-values').split('/');\n        if (values.length === 2) {\n          // \u0423\u0441\u0442\u0430\u043D\u0430\u0432\u043B\u0438\u0432\u0430\u0435\u043C \u043F\u0435\u0440\u0432\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E\n          textElement.textContent = values[0];\n\n          // \u0414\u043E\u0431\u0430\u0432\u043B\u044F\u0435\u043C \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A \u043A\u043B\u0438\u043A\u0430\n          button.addEventListener('click', (e) => {\n            e.preventDefault();\n            // \u0422\u0435\u043A\u0443\u0449\u0438\u0439 \u0442\u0435\u043A\u0441\u0442\n            const currentText = textElement.textContent;\n            // \u041F\u0435\u0440\u0435\u043A\u043B\u044E\u0447\u0430\u0435\u043C \u043C\u0435\u0436\u0434\u0443 \u0434\u0432\u0443\u043C\u044F \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044F\u043C\u0438\n            textElement.textContent = currentText === values[0] ? values[1] : values[0];\n          });\n        }\n      }\n    });\n  }\n};\n", "//https://chatgpt.com/c/6706c363-9760-8002-957f-ae7a48e4b0ad\n//--\nexport const func_collapseButtons = () => {\n  const allSections = document.querySelectorAll('[collapse-section]');\n  if (allSections.length) {\n    allSections.forEach((section) => {\n      const button = section.querySelector('[collapse-button]');\n      const elementsToToggle = section.querySelectorAll('[collapse-element-class]');\n      if (button) {\n        button.addEventListener('click', () => {\n          button.classList.toggle('is-active');\n          elementsToToggle.forEach((element) => {\n            const classToToggle = element.getAttribute('collapse-element-class');\n            if (classToToggle) {\n              element.classList.toggle(classToToggle);\n            }\n          });\n        });\n      }\n    });\n  }\n};\n", "// https://chatgpt.com/c/670cd6c8-3514-8002-b48e-28e0e79759a7?model=o1-preview\n\nexport const func_heightTransition = () => {\n  const allElements = document.querySelectorAll('[height-transition]');\n\n  if (allElements.length) {\n    allElements.forEach((element) => {\n      const transitionDuration = element.getAttribute('height-transition') || '0.5s';\n\n      // \u0423\u0441\u0442\u0430\u043D\u0430\u0432\u043B\u0438\u0432\u0430\u0435\u043C \u0441\u0442\u0438\u043B\u0438 \u0434\u043B\u044F max-height \u0438 opacity \u0447\u0435\u0440\u0435\u0437 JS\n      element.style.overflow = 'hidden';\n      element.style.transitionProperty = 'max-height, opacity';\n      element.style.transitionDuration = `${transitionDuration}, ${transitionDuration}`;\n      element.style.transitionTimingFunction = 'ease, ease';\n\n      // \u0418\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0438\u0440\u0443\u0435\u043C \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u0435 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430\n      if (element.classList.contains('collapsed')) {\n        element.style.maxHeight = '0';\n        element.style.opacity = '0';\n      } else {\n        element.style.maxHeight = element.scrollHeight + 'px';\n        element.style.opacity = '1';\n      }\n\n      // \u041D\u0430\u0431\u043B\u044E\u0434\u0430\u0435\u043C \u0437\u0430 \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F\u043C\u0438 \u043A\u043B\u0430\u0441\u0441\u0430\n      const observer = new MutationObserver(() => {\n        if (element.classList.contains('collapsed')) {\n          // \u0410\u043D\u0438\u043C\u0430\u0446\u0438\u044F \u0441\u043A\u0440\u044B\u0442\u0438\u044F\n          element.style.transitionProperty = 'max-height, opacity';\n          element.style.transitionDuration = `${transitionDuration}, ${transitionDuration}`;\n          element.style.maxHeight = '0';\n          element.style.opacity = '0';\n        } else {\n          // \u0410\u043D\u0438\u043C\u0430\u0446\u0438\u044F \u043F\u043E\u043A\u0430\u0437\u0430: max-height \u0438 opacity \u0441 \u0437\u0430\u0434\u0435\u0440\u0436\u043A\u043E\u0439\n          element.style.transitionProperty = 'max-height';\n          element.style.transitionDuration = `${transitionDuration}`;\n          element.style.maxHeight = element.scrollHeight + 'px';\n\n          // \u0414\u043E\u0431\u0430\u0432\u043B\u044F\u0435\u043C \u0437\u0430\u0434\u0435\u0440\u0436\u043A\u0443 \u0434\u043B\u044F opacity \u0447\u0435\u0440\u0435\u0437 setTimeout\n          setTimeout(() => {\n            element.style.transitionProperty = 'opacity';\n            element.style.transitionDuration = `${transitionDuration}`;\n            element.style.opacity = '1';\n          }, 500);\n        }\n      });\n\n      observer.observe(element, { attributes: true, attributeFilter: ['class'] });\n    });\n  }\n};\n", "//https://chatgpt.com/c/67054b69-b9f4-8002-af18-ce204dd0cf9c\n//----\n\nexport const func_heroForm = () => {\n  const form = document.getElementById('main-hero-form');\n  const formInputs = document.querySelectorAll('[form-step-input]');\n  const figmaInput = document.querySelector('[form-step-input=\"1\"]');\n  const emailInput = document.querySelector('[form-step-input=\"2\"]');\n  const messageInput = document.querySelector('[form-step-input=\"3\"]');\n  const submitButton = document.querySelector('[fs-mirrorclick-element=\"trigger\"]');\n\n  const filledSteps = new Set();\n\n  formInputs.forEach((input) => {\n    input.addEventListener('input', handleInputChange);\n    input.addEventListener('focus', handleInputFocus);\n  });\n\n  function handleInputFocus(event) {\n    const input = event.target;\n    const step = parseInt(input.getAttribute('form-step-input'), 10);\n    updateActiveArrow(step);\n  }\n\n  function handleInputChange(event) {\n    const input = event.target;\n    const step = parseInt(input.getAttribute('form-step-input'), 10);\n    const value = input.value.trim();\n\n    // \u0421\u0431\u0440\u0430\u0441\u044B\u0432\u0430\u0435\u043C \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0439 \u0442\u0430\u0439\u043C\u0435\u0440 \u0434\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u0438\u044F \u043E\u0448\u0438\u0431\u043A\u0438\n    if (input.errorTimeout) {\n      clearTimeout(input.errorTimeout);\n      input.errorTimeout = null;\n    }\n\n    // \u0412\u044B\u043F\u043E\u043B\u043D\u044F\u0435\u043C \u043C\u043E\u043C\u0435\u043D\u0442\u0430\u043B\u044C\u043D\u0443\u044E \u0432\u0430\u043B\u0438\u0434\u0430\u0446\u0438\u044E\n    const isValid = isValidInput(step, value);\n\n    // \u041E\u0431\u043D\u043E\u0432\u043B\u044F\u0435\u043C filledSteps \u0438 UI \u043C\u043E\u043C\u0435\u043D\u0442\u0430\u043B\u044C\u043D\u043E\n    performValidation(input, step, value);\n\n    if (isValid) {\n      // \u0415\u0441\u043B\u0438 \u0432\u0432\u043E\u0434 \u0432\u0430\u043B\u0438\u0434\u0435\u043D, \u0443\u0434\u0430\u043B\u044F\u0435\u043C \u043A\u043B\u0430\u0441\u0441 \u043E\u0448\u0438\u0431\u043A\u0438 \u043C\u043E\u043C\u0435\u043D\u0442\u0430\u043B\u044C\u043D\u043E\n      input.classList.remove('input-error');\n    } else {\n      // \u0415\u0441\u043B\u0438 \u0432\u0432\u043E\u0434 \u043D\u0435\u0432\u0430\u043B\u0438\u0434\u0435\u043D\n      if (step === 1) {\n        // \u0414\u043B\u044F \u0448\u0430\u0433\u0430 1 (Figma) \u0434\u043E\u0431\u0430\u0432\u043B\u044F\u0435\u043C \u043A\u043B\u0430\u0441\u0441 \u043E\u0448\u0438\u0431\u043A\u0438 \u043C\u043E\u043C\u0435\u043D\u0442\u0430\u043B\u044C\u043D\u043E\n        input.classList.add('input-error');\n      } else {\n        // \u0414\u043B\u044F \u0448\u0430\u0433\u043E\u0432 2 \u0438 3 \u0434\u043E\u0431\u0430\u0432\u043B\u044F\u0435\u043C \u043A\u043B\u0430\u0441\u0441 \u043E\u0448\u0438\u0431\u043A\u0438 \u0441 \u0437\u0430\u0434\u0435\u0440\u0436\u043A\u043E\u0439 \u043F\u043E\u0441\u043B\u0435 3 \u0441\u0435\u043A\u0443\u043D\u0434 \u043D\u0435\u0430\u043A\u0442\u0438\u0432\u043D\u043E\u0441\u0442\u0438\n        input.errorTimeout = setTimeout(() => {\n          // \u041F\u0440\u043E\u0432\u0435\u0440\u044F\u0435\u043C, \u043D\u0435 \u0441\u0442\u0430\u043B \u043B\u0438 \u0432\u0432\u043E\u0434 \u0432\u0430\u043B\u0438\u0434\u043D\u044B\u043C \u0437\u0430 \u0432\u0440\u0435\u043C\u044F \u043E\u0436\u0438\u0434\u0430\u043D\u0438\u044F\n          const currentValue = input.value.trim();\n          const currentIsValid = isValidInput(step, currentValue);\n\n          if (!currentIsValid) {\n            input.classList.add('input-error');\n          }\n          input.errorTimeout = null;\n        }, 3000);\n      }\n    }\n  }\n\n  function isValidFigmaLink(value) {\n    try {\n      const url = new URL(value);\n      return url.hostname.toLowerCase().includes('figma.com');\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function validateEmail(email) {\n    const re = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\n    return re.test(email);\n  }\n\n  function isValidInput(step, value) {\n    if (step === 1) {\n      // \u041F\u043E\u043B\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u043F\u0443\u0441\u0442\u044B\u043C, \u043D\u043E \u0448\u0430\u0433 \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044F \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u043D\u044B\u043C \u0442\u043E\u043B\u044C\u043A\u043E \u043F\u0440\u0438 \u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u043E\u0439 \u0441\u0441\u044B\u043B\u043A\u0435\n      return value === '' || isValidFigmaLink(value);\n    }\n    if (step === 2) {\n      return validateEmail(value);\n    }\n    if (step === 3) {\n      return value.length >= 5;\n    }\n    return false;\n  }\n\n  function performValidation(input, step, value) {\n    // \u0423\u0434\u0430\u043B\u044F\u0435\u043C \u0448\u0430\u0433 \u0438\u0437 filledSteps \u043F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E\n    filledSteps.delete(step);\n\n    const isValid = isValidInput(step, value);\n\n    if (step === 1) {\n      // \u0414\u043E\u0431\u0430\u0432\u043B\u044F\u0435\u043C \u0448\u0430\u0433 \u0432 filledSteps \u0442\u043E\u043B\u044C\u043A\u043E \u0435\u0441\u043B\u0438 \u0441\u0441\u044B\u043B\u043A\u0430 \u043D\u0435 \u043F\u0443\u0441\u0442\u0430\u044F \u0438 \u0432\u0430\u043B\u0438\u0434\u043D\u0430\u044F\n      if (value !== '' && isValidFigmaLink(value)) {\n        filledSteps.add(step);\n      }\n    } else {\n      if (isValid) {\n        filledSteps.add(step);\n      }\n    }\n\n    // \u041E\u0431\u043D\u043E\u0432\u043B\u044F\u0435\u043C \u043F\u043B\u0435\u0439\u0441\u0445\u043E\u043B\u0434\u0435\u0440\u044B\n    if (isValid) {\n      if (step === 1) {\n        input.placeholder = 'link to figma project';\n      }\n      if (step === 2) {\n        input.placeholder = 'email';\n      }\n      if (step === 3) {\n        input.placeholder = 'detail about the project (scope, deadlines)';\n      }\n    } else {\n      if (step === 1) {\n        input.placeholder = 'Please enter a valid Figma link';\n      }\n      if (step === 2) {\n        input.placeholder = 'Please enter a valid email address';\n      }\n      if (step === 3) {\n        input.placeholder = 'Please enter at least 5 characters';\n      }\n\n      // \u041F\u0440\u0438 \u043D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u043E\u043C \u0432\u0432\u043E\u0434\u0435 \u0441\u0431\u0440\u0430\u0441\u044B\u0432\u0430\u0435\u043C UI \u043D\u0430\u0447\u0438\u043D\u0430\u044F \u0441 \u0442\u0435\u043A\u0443\u0449\u0435\u0433\u043E \u0448\u0430\u0433\u0430\n      resetUIFromStep(step);\n    }\n\n    // \u041E\u0431\u043D\u043E\u0432\u043B\u044F\u0435\u043C \u0438\u043D\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0438 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u0435 \u043A\u043D\u043E\u043F\u043A\u0438 \u043E\u0442\u043F\u0440\u0430\u0432\u043A\u0438\n    updateUI();\n    updateSubmitButtonState();\n  }\n\n  function resetUIFromStep(stepNum) {\n    for (let i = stepNum; i <= 3; i++) {\n      const ill = document.querySelector(`[form-step-ill=\"${i}\"]`);\n      ill && ill.classList.remove('is-active');\n\n      const progressItem = document.querySelector(`[form-step-progress-item=\"${i}\"]`);\n      if (progressItem) {\n        const lineFiller = progressItem.querySelector('.steps-grid_item-line-filler');\n        const stepName = progressItem.querySelector('.rg-12.is-step-name');\n        lineFiller && lineFiller.classList.remove('is-active');\n        stepName && stepName.classList.remove('is-active');\n      }\n\n      const icon = document.querySelector(`.figma-zone-steps-icons_item[form-step-ill=\"${i}\"]`);\n      icon && icon.classList.remove('is-active');\n    }\n  }\n\n  function updateActiveArrow(stepNum) {\n    const illArrows = document.querySelectorAll('[form-step-ill-arrow]');\n    illArrows.forEach((arrow) => {\n      const arrowStep = parseInt(arrow.getAttribute('form-step-ill-arrow'), 10);\n      if (arrowStep === stepNum) {\n        arrow.classList.add('is-active');\n      } else {\n        arrow.classList.remove('is-active');\n      }\n    });\n  }\n\n  function updateUI() {\n    for (let i = 1; i <= 3; i++) {\n      const ill = document.querySelector(`[form-step-ill=\"${i}\"]`);\n      if (filledSteps.has(i)) {\n        ill && ill.classList.add('is-active');\n      } else {\n        ill && ill.classList.remove('is-active');\n      }\n    }\n\n    for (let i = 1; i <= 3; i++) {\n      const progressItem = document.querySelector(`[form-step-progress-item=\"${i}\"]`);\n      if (progressItem) {\n        const lineFiller = progressItem.querySelector('.steps-grid_item-line-filler');\n        const stepName = progressItem.querySelector('.rg-12.is-step-name');\n\n        if (filledSteps.has(i)) {\n          lineFiller && lineFiller.classList.add('is-active');\n          stepName && stepName.classList.add('is-active');\n        } else {\n          lineFiller && lineFiller.classList.remove('is-active');\n          stepName && stepName.classList.remove('is-active');\n        }\n      }\n    }\n\n    for (let i = 1; i <= 3; i++) {\n      const icon = document.querySelector(`.figma-zone-steps-icons_item[form-step-ill=\"${i}\"]`);\n      if (filledSteps.has(i)) {\n        icon && icon.classList.add('is-active');\n      } else {\n        icon && icon.classList.remove('is-active');\n      }\n    }\n  }\n\n  function updateSubmitButtonState() {\n    if (isFormValid()) {\n      submitButton.disabled = false;\n    } else {\n      submitButton.disabled = true;\n    }\n  }\n\n  function isFormValid() {\n    return (\n      isValidInput(1, figmaInput.value.trim()) &&\n      isValidInput(2, emailInput.value.trim()) &&\n      isValidInput(3, messageInput.value.trim())\n    );\n  }\n\n  // \u041E\u0431\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A \u043E\u0442\u043F\u0440\u0430\u0432\u043A\u0438 \u0444\u043E\u0440\u043C\u044B\n  form.addEventListener('submit', function (event) {\n    if (!isFormValid()) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      // \u0415\u0441\u043B\u0438 \u043F\u043E\u043B\u0435 \u0441 Figma-\u0441\u0441\u044B\u043B\u043A\u043E\u0439 \u043D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u043E, \u0434\u043E\u0431\u0430\u0432\u043B\u044F\u0435\u043C \u044D\u0444\u0444\u0435\u043A\u0442 \u043C\u0438\u0433\u0430\u043D\u0438\u044F\n      if (!isValidInput(1, figmaInput.value.trim())) {\n        figmaInput.classList.add('input-blink');\n\n        // \u0423\u0434\u0430\u043B\u044F\u0435\u043C \u043A\u043B\u0430\u0441\u0441 \u043C\u0438\u0433\u0430\u043D\u0438\u044F \u043F\u043E\u0441\u043B\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u0438\u044F \u0430\u043D\u0438\u043C\u0430\u0446\u0438\u0438\n        setTimeout(() => {\n          figmaInput.classList.remove('input-blink');\n        }, 1500); // \u0414\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u044D\u0444\u0444\u0435\u043A\u0442\u0430 \u043C\u0438\u0433\u0430\u043D\u0438\u044F\n      }\n\n      // \u0412\u044B \u043C\u043E\u0436\u0435\u0442\u0435 \u0434\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u044D\u0444\u0444\u0435\u043A\u0442 \u043C\u0438\u0433\u0430\u043D\u0438\u044F \u0438 \u0434\u043B\u044F \u0434\u0440\u0443\u0433\u0438\u0445 \u043F\u043E\u043B\u0435\u0439 \u043F\u0440\u0438 \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E\u0441\u0442\u0438\n\n      return false;\n    }\n  });\n\n  // \u0418\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0438\u0440\u0443\u0435\u043C \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u0435 \u043A\u043D\u043E\u043F\u043A\u0438 \u043E\u0442\u043F\u0440\u0430\u0432\u043A\u0438\n  updateSubmitButtonState();\n};\n\nfunc_heroForm();\n", "export const func_mindConnectionsLeader = () => {\n  // \u0417\u0430\u0434\u0435\u0440\u0436\u043A\u0430 \u0437\u0430\u043F\u0443\u0441\u043A\u0430 \u0441\u043A\u0440\u0438\u043F\u0442\u0430 \u043D\u0430 2.5 \u0441\u0435\u043A\u0443\u043D\u0434\u044B\n  setTimeout(() => {\n    let currentLineStyleIndex = 1; // \u0418\u043D\u0434\u0435\u043A\u0441 \u0442\u0435\u043A\u0443\u0449\u0435\u0433\u043E \u0441\u0442\u0438\u043B\u044F \u043B\u0438\u043D\u0438\u0438 ('grid')\n    const lineStyles = ['straight', 'grid', 'curved']; // \u041C\u0430\u0441\u0441\u0438\u0432 \u0441\u0442\u0438\u043B\u0435\u0439 \u043B\u0438\u043D\u0438\u0439\n    const connectionsData = []; // \u0414\u043B\u044F \u0445\u0440\u0430\u043D\u0435\u043D\u0438\u044F \u0434\u0430\u043D\u043D\u044B\u0445 \u043E \u0441\u043E\u0435\u0434\u0438\u043D\u0435\u043D\u0438\u044F\u0445\n    const breakpoints = [480, 769, 992]; // \u041A\u043E\u043D\u0442\u0440\u043E\u043B\u044C\u043D\u044B\u0435 \u0442\u043E\u0447\u043A\u0438 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043D\u0438\u0439\n    let previousWindowWidth = window.innerWidth; // \u041F\u0440\u0435\u0434\u044B\u0434\u0443\u0449\u0430\u044F \u0448\u0438\u0440\u0438\u043D\u0430 \u043E\u043A\u043D\u0430\n    let shouldUpdateLines = true; // \u0424\u043B\u0430\u0433 \u0434\u043B\u044F \u043A\u043E\u043D\u0442\u0440\u043E\u043B\u044F \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u044F \u043B\u0438\u043D\u0438\u0439\n\n    // \u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043B\u044F \u043E\u0442\u0440\u0438\u0441\u043E\u0432\u043A\u0438 \u0432\u0441\u0435\u0445 \u0441\u043E\u0435\u0434\u0438\u043D\u0435\u043D\u0438\u0439\n    function drawConnections() {\n      // \u0415\u0441\u043B\u0438 SVG \u0435\u0449\u0435 \u043D\u0435 \u0441\u043E\u0437\u0434\u0430\u043D, \u0441\u043E\u0437\u0434\u0430\u0435\u043C \u0435\u0433\u043E\n      let svg = document.getElementById('connection-svg');\n      if (!svg) {\n        svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('id', 'connection-svg');\n        svg.style.position = 'absolute';\n        svg.style.top = '0';\n        svg.style.left = '0';\n        svg.style.width = '100%';\n        svg.style.height = '100%';\n        svg.style.pointerEvents = 'none'; // \u0427\u0442\u043E\u0431\u044B SVG \u043D\u0435 \u043F\u0435\u0440\u0435\u043A\u0440\u044B\u0432\u0430\u043B \u0434\u0440\u0443\u0433\u0438\u0435 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u044B\n        svg.style.overflow = 'visible'; // \u0427\u0442\u043E\u0431\u044B \u043B\u0438\u043D\u0438\u0438 \u043D\u0435 \u043E\u0431\u0440\u0435\u0437\u0430\u043B\u0438\u0441\u044C\n        svg.style.zIndex = '-1'; // \u0423\u0441\u0442\u0430\u043D\u0430\u0432\u043B\u0438\u0432\u0430\u0435\u043C \u043E\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0439 z-index \u0434\u043B\u044F SVG\n        // \u0412\u0441\u0442\u0430\u0432\u043B\u044F\u0435\u043C SVG \u043F\u0435\u0440\u0435\u0434 \u043F\u0435\u0440\u0432\u044B\u043C \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u043C body, \u0447\u0442\u043E\u0431\u044B \u043B\u0438\u043D\u0438\u0438 \u0431\u044B\u043B\u0438 \u0437\u0430 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430\u043C\u0438\n        document.body.insertBefore(svg, document.body.firstChild);\n      }\n\n      const connections = document.querySelectorAll('[mind-connection]');\n\n      // \u0417\u0430\u0434\u0430\u0439\u0442\u0435 \u0442\u043E\u043B\u0449\u0438\u043D\u0443 \u0438 \u0446\u0432\u0435\u0442 \u043B\u0438\u043D\u0438\u0438\n      const lineThickness = 1; // \u0412\u0430\u0448\u0430 \u0438\u0437\u043D\u0430\u0447\u0430\u043B\u044C\u043D\u0430\u044F \u0442\u043E\u043B\u0449\u0438\u043D\u0430\n      const lineColor = '#666666'; // \u0426\u0432\u0435\u0442 \u043B\u0438\u043D\u0438\u0439\n\n      // \u041E\u0431\u043D\u043E\u0432\u043B\u044F\u0435\u043C \u0438\u043B\u0438 \u0441\u043E\u0437\u0434\u0430\u0435\u043C \u043B\u0438\u043D\u0438\u0438\n      connections.forEach((startEl) => {\n        const targetSelectors = startEl\n          .getAttribute('mind-connection')\n          .split(',')\n          .map((selector) => selector.trim());\n        targetSelectors.forEach((targetSelector) => {\n          const matchingElements = document.querySelectorAll(\n            `[mind-connection~=\"${targetSelector}\"]`\n          );\n\n          // \u041F\u0440\u0435\u0434\u043F\u043E\u043B\u0430\u0433\u0430\u0435\u0442\u0441\u044F, \u0447\u0442\u043E \u043F\u0435\u0440\u0432\u044B\u0439 \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u2014 \u043D\u0430\u0447\u0430\u043B\u043E, \u0430 \u0432\u0442\u043E\u0440\u043E\u0439 \u2014 \u043A\u043E\u043D\u0435\u0446\n          if (matchingElements.length > 0) {\n            const endEl = matchingElements[0];\n\n            // \u041F\u0440\u043E\u0432\u0435\u0440\u044F\u0435\u043C, \u043D\u0443\u0436\u043D\u043E \u043B\u0438 \u043F\u0440\u043E\u043F\u0443\u0441\u0442\u0438\u0442\u044C \u043E\u0442\u0440\u0438\u0441\u043E\u0432\u043A\u0443 \u043B\u0438\u043D\u0438\u0438 \u043D\u0430 \u043C\u043E\u0431\u0438\u043B\u044C\u043D\u044B\u0445 \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u0430\u0445\n            const isMobile = window.innerWidth < 768;\n            const startElHiddenOnMobile = startEl.classList.contains('hide-on-mobile');\n            const endElHiddenOnMobile = endEl.classList.contains('hide-on-mobile');\n\n            if (isMobile && (startElHiddenOnMobile || endElHiddenOnMobile)) {\n              // \u0415\u0441\u043B\u0438 \u0443\u0441\u043B\u043E\u0432\u0438\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u044F\u0435\u0442\u0441\u044F, \u043F\u0440\u043E\u043F\u0443\u0441\u043A\u0430\u0435\u043C \u043E\u0442\u0440\u0438\u0441\u043E\u0432\u043A\u0443 \u044D\u0442\u043E\u0439 \u043B\u0438\u043D\u0438\u0438\n              return;\n            }\n\n            const isHorizontalAttr = startEl.getAttribute('data-start-horizontal');\n            const isHorizontalStart =\n              isHorizontalAttr !== null ? (isHorizontalAttr === 'true' ? true : false) : null;\n\n            // \u0418\u0449\u0435\u043C \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0435 \u0434\u0430\u043D\u043D\u044B\u0435 \u043E \u043B\u0438\u043D\u0438\u0438 \u043C\u0435\u0436\u0434\u0443 \u044D\u0442\u0438\u043C\u0438 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430\u043C\u0438\n            let connection = connectionsData.find(\n              (data) => data.startEl === startEl && data.endEl === endEl\n            );\n\n            if (!connection) {\n              // \u0415\u0441\u043B\u0438 \u0441\u043E\u0435\u0434\u0438\u043D\u0435\u043D\u0438\u044F \u0435\u0449\u0435 \u043D\u0435\u0442, \u0441\u043E\u0437\u0434\u0430\u0435\u043C \u043D\u043E\u0432\u043E\u0435\n              const pathElement = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n              pathElement.setAttribute('stroke', lineColor);\n              pathElement.setAttribute('stroke-width', lineThickness);\n              pathElement.setAttribute('fill', 'none');\n              pathElement.classList.add('connection-line');\n              svg.appendChild(pathElement);\n\n              connection = {\n                startEl,\n                endEl,\n                pathElement,\n                isHorizontalStart,\n              };\n              connectionsData.push(connection);\n            }\n\n            // \u041E\u0431\u043D\u043E\u0432\u043B\u044F\u0435\u043C \u043F\u043E\u0437\u0438\u0446\u0438\u044E \u043B\u0438\u043D\u0438\u0438\n            updateLine(connection);\n          }\n        });\n      });\n    }\n\n    // \u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043B\u044F \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u044F \u043B\u0438\u043D\u0438\u0438\n    function updateLine(connection) {\n      const { startEl, endEl, pathElement, isHorizontalStart } = connection;\n      const startRect = startEl.getBoundingClientRect();\n      const endRect = endEl.getBoundingClientRect();\n\n      const x1 = startRect.left + startRect.width / 2 + window.scrollX;\n      const y1 = startRect.top + startRect.height / 2 + window.scrollY;\n      const x2 = endRect.left + endRect.width / 2 + window.scrollX;\n      const y2 = endRect.top + endRect.height / 2 + window.scrollY;\n\n      let path;\n      const currentLineStyle = lineStyles[currentLineStyleIndex];\n\n      if (currentLineStyle === 'straight') {\n        // \u041F\u0440\u044F\u043C\u0430\u044F \u043B\u0438\u043D\u0438\u044F\n        path = `M ${x1} ${y1} L ${x2} ${y2}`;\n      } else if (currentLineStyle === 'curved') {\n        // \u041F\u043B\u0430\u0432\u043D\u0430\u044F \u043A\u0440\u0438\u0432\u0430\u044F (\u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u043C \u0432\u0430\u0448 \u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u043A\u043E\u0434)\n        const dx = (x2 - x1) / 2;\n        const dy = (y2 - y1) / 2;\n        path = `M ${x1} ${y1} Q ${x1} ${y1 + dy}, ${x1 + dx} ${y1 + dy} T ${x2} ${y2}`;\n      } else if (currentLineStyle === 'grid') {\n        // \u041B\u043E\u043C\u0430\u043D\u0430\u044F \u043B\u0438\u043D\u0438\u044F \u0441 \u0443\u0433\u043B\u0430\u043C\u0438\n        if (isHorizontalStart === null) {\n          // \u0415\u0441\u043B\u0438 \u043D\u0430\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u0438\u0435 \u043D\u0435 \u0443\u043A\u0430\u0437\u0430\u043D\u043E, \u0440\u0438\u0441\u0443\u0435\u043C \u043F\u0440\u044F\u043C\u0443\u044E \u043B\u0438\u043D\u0438\u044E\n          path = `M ${x1} ${y1} L ${x2} ${y2}`;\n        } else if (isHorizontalStart) {\n          // \u0413\u043E\u0440\u0438\u0437\u043E\u043D\u0442\u0430\u043B\u044C\u043D\u043E\u0435 \u043D\u0430\u0447\u0430\u043B\u043E\n          path = `M ${x1} ${y1} H ${x2} V ${y2}`;\n        } else {\n          // \u0412\u0435\u0440\u0442\u0438\u043A\u0430\u043B\u044C\u043D\u043E\u0435 \u043D\u0430\u0447\u0430\u043B\u043E\n          path = `M ${x1} ${y1} V ${y2} H ${x2}`;\n        }\n      }\n\n      const previousPath = pathElement.getAttribute('d');\n      if (previousPath !== path) {\n        // \u0417\u0430\u043C\u0435\u043D\u044F\u0435\u043C \u0430\u0442\u0440\u0438\u0431\u0443\u0442 'd' \u043D\u0430\u043F\u0440\u044F\u043C\u0443\u044E\n        pathElement.setAttribute('d', path);\n      }\n    }\n\n    // \u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043B\u044F \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u044F \u0432\u0441\u0435\u0445 \u043B\u0438\u043D\u0438\u0439 (\u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u0442\u0441\u044F \u0434\u043B\u044F \u0430\u043D\u0438\u043C\u0430\u0446\u0438\u0438)\n    function updateAllLines() {\n      if (!shouldUpdateLines) return;\n      connectionsData.forEach((connection) => {\n        updateLine(connection);\n      });\n      requestAnimationFrame(updateAllLines);\n    }\n\n    // \u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043B\u044F \u0443\u0441\u0442\u0430\u043D\u043E\u0432\u043A\u0438 \u0441\u0442\u0438\u043B\u044F \u043B\u0438\u043D\u0438\u0439\n    function setLineStyle(styleName) {\n      const index = lineStyles.indexOf(styleName);\n      if (index !== -1) {\n        currentLineStyleIndex = index;\n        // \u041F\u0435\u0440\u0435\u0440\u0438\u0441\u043E\u0432\u044B\u0432\u0430\u0435\u043C \u043B\u0438\u043D\u0438\u0438\n        connectionsData.forEach((connection) => {\n          updateLine(connection);\n        });\n      }\n    }\n\n    // \u041E\u0431\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A\u0438 \u043D\u0430\u0432\u0435\u0434\u0435\u043D\u0438\u044F\n    function addHoverListeners() {\n      const hoverElements = document.querySelectorAll('[hover-lines-changer]');\n      hoverElements.forEach((element) => {\n        element.addEventListener('mouseenter', onHover);\n        // \u041D\u0435 \u0434\u043E\u0431\u0430\u0432\u043B\u044F\u0435\u043C \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A 'mouseleave', \u0442\u0430\u043A \u043A\u0430\u043A \u044D\u0444\u0444\u0435\u043A\u0442 \u0434\u043E\u043B\u0436\u0435\u043D \u0441\u043E\u0445\u0440\u0430\u043D\u044F\u0442\u044C\u0441\u044F\n      });\n    }\n\n    function onHover(event) {\n      if (window.innerWidth >= 768) {\n        const element = event.currentTarget;\n        const newLineStyle = element.getAttribute('hover-lines-changer');\n        if (['straight', 'grid', 'fluid', 'curved'].includes(newLineStyle)) {\n          const styleName = newLineStyle === 'fluid' ? 'curved' : newLineStyle;\n          setLineStyle(styleName);\n        }\n      }\n    }\n\n    // \u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043B\u044F \u043F\u0435\u0440\u0435\u0437\u0430\u043F\u0443\u0441\u043A\u0430 \u0441\u043A\u0440\u0438\u043F\u0442\u0430\n    function restartScript() {\n      // \u0423\u0434\u0430\u043B\u044F\u0435\u043C SVG \u044D\u043B\u0435\u043C\u0435\u043D\u0442\n      const svg = document.getElementById('connection-svg');\n      if (svg) {\n        svg.parentNode.removeChild(svg);\n      }\n\n      // \u041E\u0447\u0438\u0449\u0430\u0435\u043C \u0434\u0430\u043D\u043D\u044B\u0435 \u043E \u0441\u043E\u0435\u0434\u0438\u043D\u0435\u043D\u0438\u044F\u0445\n      connectionsData.length = 0;\n\n      // \u041E\u0441\u0442\u0430\u043D\u0430\u0432\u043B\u0438\u0432\u0430\u0435\u043C \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u0435 \u043B\u0438\u043D\u0438\u0439\n      shouldUpdateLines = false;\n\n      // \u0416\u0434\u0435\u043C 1 \u0441\u0435\u043A\u0443\u043D\u0434\u0443 \u0438 \u0437\u0430\u043F\u0443\u0441\u043A\u0430\u0435\u043C \u0441\u043A\u0440\u0438\u043F\u0442 \u0437\u0430\u043D\u043E\u0432\u043E\n      setTimeout(() => {\n        previousWindowWidth = window.innerWidth; // \u041E\u0431\u043D\u043E\u0432\u043B\u044F\u0435\u043C \u0448\u0438\u0440\u0438\u043D\u0443 \u043E\u043A\u043D\u0430\n        shouldUpdateLines = true;\n        drawConnections();\n        addHoverListeners();\n      }, 1000);\n    }\n\n    // \u041F\u0435\u0440\u0432\u0430\u044F \u043E\u0442\u0440\u0438\u0441\u043E\u0432\u043A\u0430\n    drawConnections();\n    // \u0417\u0430\u043F\u0443\u0441\u043A\u0430\u0435\u043C \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u0435 \u043B\u0438\u043D\u0438\u0439\n    requestAnimationFrame(updateAllLines);\n    // \u0414\u043E\u0431\u0430\u0432\u043B\u044F\u0435\u043C \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A\u0438 \u043D\u0430\u0432\u0435\u0434\u0435\u043D\u0438\u044F\n    addHoverListeners();\n\n    // \u041F\u0435\u0440\u0435\u0440\u0438\u0441\u043E\u0432\u043A\u0430 \u043F\u0440\u0438 \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0438 \u0440\u0430\u0437\u043C\u0435\u0440\u0430 \u043E\u043A\u043D\u0430\n    window.addEventListener('resize', () => {\n      // \u0418\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u043C debounce, \u0447\u0442\u043E\u0431\u044B \u043D\u0435 \u0432\u044B\u0437\u044B\u0432\u0430\u0442\u044C \u0444\u0443\u043D\u043A\u0446\u0438\u044E \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u0447\u0430\u0441\u0442\u043E\n      clearTimeout(window.resizeTimeout);\n      window.resizeTimeout = setTimeout(() => {\n        handleResize();\n      }, 100);\n    });\n\n    function handleResize() {\n      const currentWindowWidth = window.innerWidth;\n\n      // \u041F\u0440\u043E\u0432\u0435\u0440\u044F\u0435\u043C, \u043F\u0435\u0440\u0435\u0441\u0435\u043A\u043B\u0438 \u043B\u0438 \u043C\u044B \u043A\u0430\u043A\u0443\u044E-\u043B\u0438\u0431\u043E \u0438\u0437 \u043A\u043E\u043D\u0442\u0440\u043E\u043B\u044C\u043D\u044B\u0445 \u0442\u043E\u0447\u0435\u043A\n      let crossedBreakpoint = false;\n\n      for (const breakpoint of breakpoints) {\n        if (\n          (previousWindowWidth < breakpoint && currentWindowWidth >= breakpoint) ||\n          (previousWindowWidth >= breakpoint && currentWindowWidth < breakpoint)\n        ) {\n          crossedBreakpoint = true;\n          break;\n        }\n      }\n\n      if (crossedBreakpoint) {\n        // \u041F\u0435\u0440\u0435\u0437\u0430\u043F\u0443\u0441\u043A\u0430\u0435\u043C \u0441\u043A\u0440\u0438\u043F\u0442\n        restartScript();\n      } else {\n        // \u041F\u0440\u043E\u0441\u0442\u043E \u043F\u0435\u0440\u0435\u0440\u0438\u0441\u043E\u0432\u044B\u0432\u0430\u0435\u043C \u0441\u043E\u0435\u0434\u0438\u043D\u0435\u043D\u0438\u044F\n        drawConnections();\n      }\n\n      previousWindowWidth = currentWindowWidth;\n    }\n\n    // \u041D\u0430\u0431\u043B\u044E\u0434\u0430\u0442\u0435\u043B\u044C \u0437\u0430 \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F\u043C\u0438 \u0432 DOM\n    const observer = new MutationObserver(() => {\n      connectionsData.forEach((connection) => {\n        updateLine(connection);\n      });\n    });\n\n    // \u041D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438 \u043D\u0430\u0431\u043B\u044E\u0434\u0430\u0442\u0435\u043B\u044F\n    const config = { attributes: true, childList: true, subtree: true, characterData: true };\n\n    // \u041D\u0430\u0447\u0438\u043D\u0430\u0435\u043C \u043D\u0430\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0435 \u0437\u0430 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u043E\u043C\n    observer.observe(document.body, config);\n\n    // \u0423\u0434\u0430\u043B\u044F\u0435\u043C \u044D\u0442\u043E\u0442 \u0431\u043B\u043E\u043A, \u0447\u0442\u043E\u0431\u044B \u043E\u0442\u043A\u043B\u044E\u0447\u0438\u0442\u044C \u043F\u0435\u0440\u0435\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0435 \u0441\u0442\u0438\u043B\u044F \u043B\u0438\u043D\u0438\u0439 \u043F\u043E \u0438\u043D\u0442\u0435\u0440\u0432\u0430\u043B\u0443\n    // setInterval(() => {\n    //   toggleLineStyle();\n    // }, 10000);\n  }, 2500);\n};\n", "export const func_statsHero = () => {\n  // \u041F\u0440\u043E\u0432\u0435\u0440\u044F\u0435\u043C, \u0435\u0441\u0442\u044C \u043B\u0438 \u043D\u0430 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0435 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u044B \u0441 \u043B\u044E\u0431\u044B\u043C \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043E\u043C\n  const all_func_statsHero = document.querySelectorAll('.card.is-hero-orange-section');\n  if (all_func_statsHero.length) {\n    // \u0417\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043C \u0434\u0430\u043D\u043D\u044B\u0435 \u0441 \u0432\u0430\u0448\u0435\u0433\u043E VPS\n    fetch('https://dev.kopytok.xyz/site-stats')\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0438 \u0434\u0430\u043D\u043D\u044B\u0445');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        const totalStats = data['total-stats'];\n        // console.log('\u0414\u0430\u043D\u043D\u044B\u0435 total-stats:', totalStats);\n        // \u041F\u0440\u043E\u0445\u043E\u0434\u0438\u043C \u043F\u043E \u043A\u043B\u044E\u0447\u0430\u043C \u0432 \u043E\u0431\u044A\u0435\u043A\u0442\u0435 totalStats\n        for (const key in totalStats) {\n          if (totalStats.hasOwnProperty(key)) {\n            // \u0418\u0449\u0435\u043C \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u0441 id, \u0440\u0430\u0432\u043D\u044B\u043C \u0442\u0435\u043A\u0443\u0449\u0435\u043C\u0443 \u043A\u043B\u044E\u0447\u0443\n            const element = document.getElementById(key);\n            if (element) {\n              // \u0423\u0441\u0442\u0430\u043D\u0430\u0432\u043B\u0438\u0432\u0430\u0435\u043C textContent \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430 \u043D\u0430 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0438\u0437 totalStats\n              element.textContent = totalStats[key];\n            }\n          }\n        }\n      })\n      .catch((error) => {\n        console.error('\u041E\u0448\u0438\u0431\u043A\u0430:', error);\n      });\n  }\n};\n", "// https://chatgpt.com/c/670cea8a-bc94-8002-b197-dd310bed0b59\n\nexport const func_syncClick = () => {\n  const all_newElements = document.querySelectorAll('[sync-click]');\n  const elementPairs = new Map();\n  const recentlyClicked = new WeakSet(); // \u0414\u043B\u044F \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F \u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043A\u043B\u0438\u043A\u043D\u0443\u0442\u044B\u0445 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432\n\n  // \u0413\u0440\u0443\u043F\u043F\u0438\u0440\u0443\u0435\u043C \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u044B \u043F\u043E \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044E \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430 [sync-click]\n  all_newElements.forEach((el) => {\n    const syncValue = el.getAttribute('sync-click');\n    if (!elementPairs.has(syncValue)) {\n      elementPairs.set(syncValue, []);\n    }\n    elementPairs.get(syncValue).push(el);\n  });\n\n  // \u041E\u0441\u0442\u0430\u0432\u043B\u044F\u0435\u043C \u0442\u043E\u043B\u044C\u043A\u043E \u043F\u0430\u0440\u044B (\u0435\u0441\u043B\u0438 \u0431\u043E\u043B\u044C\u0448\u0435 \u0434\u0432\u0443\u0445 \u2014 \u0438\u0433\u043D\u043E\u0440\u0438\u0440\u0443\u0435\u043C)\n  elementPairs.forEach((elements, syncValue) => {\n    if (elements.length !== 2) {\n      elementPairs.delete(syncValue);\n    }\n  });\n\n  // \u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043B\u044F \u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0433\u043E \u0437\u0430\u043F\u0440\u0435\u0442\u0430 \u0441\u0438\u043D\u0445\u0440\u043E\u043D\u043D\u043E\u0433\u043E \u043A\u043B\u0438\u043A\u0430\n  const temporarilyDisableSyncClick = (element) => {\n    recentlyClicked.add(element);\n    setTimeout(() => {\n      recentlyClicked.delete(element);\n    }, 500); // 0.5 \u0441\u0435\u043A\u0443\u043D\u0434\n  };\n\n  // \u0414\u043E\u0431\u0430\u0432\u043B\u044F\u0435\u043C \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A\u0438 \u043A\u043B\u0438\u043A\u043E\u0432\n  elementPairs.forEach((elements) => {\n    const [el1, el2] = elements;\n\n    el1.addEventListener('click', () => {\n      if (!recentlyClicked.has(el1)) {\n        temporarilyDisableSyncClick(el1);\n        if (!recentlyClicked.has(el2)) {\n          el2.click(); // \u041A\u043B\u0438\u043A\u0430\u0435\u043C \u043F\u043E \u0432\u0442\u043E\u0440\u043E\u043C\u0443 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0443\n        }\n      }\n    });\n\n    el2.addEventListener('click', () => {\n      if (!recentlyClicked.has(el2)) {\n        temporarilyDisableSyncClick(el2);\n        if (!recentlyClicked.has(el1)) {\n          el1.click(); // \u041A\u043B\u0438\u043A\u0430\u0435\u043C \u043F\u043E \u043F\u0435\u0440\u0432\u043E\u043C\u0443 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0443\n        }\n      }\n    });\n  });\n};\n", "export const func_togglClassTriggerTarget = () => {\n  const all_togglClassTriggerTarget = document.querySelectorAll('[toggl-class-trigger]');\n  if (all_togglClassTriggerTarget.length) {\n    all_togglClassTriggerTarget.forEach((trigger) => {\n      trigger.addEventListener('click', () => {\n        const triggerValue = trigger.getAttribute('toggl-class-trigger');\n\n        const targetElement = document.querySelector(`[toggl-class-target=\"${triggerValue}\"]`);\n\n        if (targetElement) {\n          const className = targetElement.getAttribute('toggl-class-name');\n\n          if (className) {\n            targetElement.classList.toggle(className);\n          }\n        }\n      });\n    });\n  }\n};\n", "export const func_yearCounter = () => {\n  const all_yearCounter = document.querySelectorAll('[year-counter]');\n  if (all_yearCounter.length) {\n    const currentYear = new Date().getFullYear();\n    const yearsPassed = currentYear - 2016;\n\n    all_yearCounter.forEach((element) => {\n      element.textContent = yearsPassed;\n    });\n  }\n};\n", "// import { func_draggableElem } from '$utils/draggable-elements';\n// import { func_interactiveZone } from '$utils/interactive-zone';\nimport { func_buttonTextToggl } from '$utils/button-text-toggl';\nimport { func_collapseButtons } from '$utils/collapse-buttons';\n// import { func_cardFly } from '$utils/func_card-fly';\nimport { func_heightTransition } from '$utils/height-transition';\nimport { func_heroForm } from '$utils/hero-form';\n// import { func_mindConnections } from '$utils/mind-connections';\nimport { func_mindConnectionsLeader } from '$utils/mind-connections-leader';\nimport { func_statsHero } from '$utils/stats-hero';\nimport { func_syncClick } from '$utils/sync-click';\nimport { func_togglClassTriggerTarget } from '$utils/toggl-class-trigger-target';\nimport { func_yearCounter } from '$utils/year-counter';\n\nwindow.Webflow ||= [];\nwindow.Webflow.push(() => {\n  // func_mindConnections();\n  // func_draggableElem();\n  // func_interactiveZone();\n  func_heroForm();\n  func_collapseButtons();\n  func_heightTransition();\n  func_syncClick();\n  func_buttonTextToggl();\n  func_statsHero();\n  func_yearCounter();\n  func_togglClassTriggerTarget();\n  func_mindConnectionsLeader();\n  // func_cardFly();\n});\n"],
  "mappings": "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",
  "names": []
}
